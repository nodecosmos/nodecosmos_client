name: Deploy to S3
on:
  push:
    branches:
      - main
env:
  VITE_API_BASE_URL: https://api.nodecosmos.com
  VITE_REACT_APP_URL: https://nodecosmos.com
  VITE_RECAPTCHA_ENABLED: true
  VITE_RECAPTCHA_SITE_KEY: 6Ld30jMjAAAAAIsW1c9xvFRaaOXOLjLywqPWDHSA
  VITE_STRIPE_ENABLED: true
  VITE_GOOGLE_CLIENT_ID: 534114130521-uc54drf8v4vh5lln8421rjna1ojee4kc.apps.googleusercontent.com
  GCP_PROJECT: nodecosmos-cloud
  BUCKET_NAME: nodecosmos.com
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        env:
            cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: | 
            ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - run: npm install
      - run: npm run lint
      - run: npm run build

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}
          workload_identity_provider: 'projects/534114130521/locations/global/workloadIdentityPools/github-oidc-provider/providers/github-issuer-provider'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      # Upload files to Google Cloud Storage
      - name: Upload to GCS
        run: |
          gsutil -m rsync -r ./build gs://${{ env.BUCKET_NAME }}/

      # Invalidate Cloud CDN cache
      - name: Invalidate Cloud CDN Cache
        run: |
          gcloud compute url-maps invalidate-cdn-cache nodecosmos-com --path="/*" --async
