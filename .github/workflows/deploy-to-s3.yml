name: Deploy to S3
on:
  push:
    branches:
      - main
env:
  VITE_API_BASE_URL: https://api.nodecosmos.com
  VITE_REACT_APP_URL: https://nodecosmos.com
  VITE_RECAPTCHA_ENABLED: true
  VITE_RECAPTCHA_SITE_KEY: 6Ld30jMjAAAAAIsW1c9xvFRaaOXOLjLywqPWDHSA
  BUCKET_NAME: nodecosmos.com
  AWS_REGION: us-east-1
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::714215625955:role/github-actions
          role-session-name: s3session
          aws-region: ${{ env.AWS_REGION }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Cache node modules
        uses: actions/cache@v3
        env:
            cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: | 
            ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - run: npm install
      - run: npm run lint
      - run: npm run build
      # Upload a file to AWS s3
      - name: Sync to S3
        run: |
          aws s3 sync ./build s3://${{ env.BUCKET_NAME }}/
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id E22YK31N73LHIN --paths "/*"
